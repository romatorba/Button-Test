{"version":3,"sources":["components/plasmic/empty_project/plasmic_empty_project.module.css","components/plasmic/empty_project/PlasmicHome.module.css","components/plasmic/empty_project/icons/PlasmicIcon__Star.jsx","components/plasmic/empty_project/PlasmicButton.jsx","components/Button.jsx","components/plasmic/empty_project/PlasmicHome.jsx","components/Home.jsx","App.jsx","reportWebVitals.js","index.js","components/plasmic/empty_project/PlasmicButton.module.css","components/plasmic/plasmic__default_style.module.css"],"names":["module","exports","StarIcon","props","className","style","title","restProps","xmlns","fill","viewBox","height","width","classNames","fillRule","d","PlasmicButton__VariantProps","Array","PlasmicButton__ArgProps","PlasmicDescendants","root","svg","box","makeNodeComponent","nodeName","func","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","args","forNode","as","data-plasmic-name","data-plasmic-override","data-plasmic-root","data-plasmic-for-node","hasGap","defaultcss","projectcss","sty","hasVariant","role","PlasmicButton__RenderFunc","displayName","PlasmicButton","Object","assign","internalVariantProps","internalArgProps","Button","PlasmicHome__VariantProps","PlasmicHome__ArgProps","button","PlasmicHome__RenderFunc","PlasmicHome","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30338710.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_reset\":\"plasmic_empty_project_root_reset__r2Jj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlasmicHome_root__3Hexm\",\"button\":\"PlasmicHome_button__3aAmQ\"};","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\";\nimport { classNames } from \"@plasmicapp/react-web\";\n\nexport function StarIcon(props) {\n  const { className, style, title, ...restProps } = props;\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        d={\n          \"M12.072 17.284l-3.905 2.053a1 1 0 01-1.053-.076 1 1 0 01-.398-.978l.745-4.349-3.159-3.08a1 1 0 01-.252-1.025 1 1 0 01.806-.68l4.366-.635 1.953-3.956A1 1 0 0112.072 4a1 1 0 01.897.558l1.952 3.956 4.366.635a1 1 0 01.807.68 1 1 0 01-.252 1.025l-3.16 3.08.746 4.349a1 1 0 01-.398.977 1 1 0 01-1.052.077l-3.906-2.053z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  );\n}\n\nexport default StarIcon;\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 7nM6r7HjBdt6ZRgVtAxBkm\n// Component: Fkal6KpxwF\nimport * as React from \"react\";\nimport * as p from \"@plasmicapp/react-web\";\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts\n} from \"@plasmicapp/react-web\";\nimport \"@plasmicapp/react-web/lib/plasmic.css\";\nimport * as defaultcss from \"../plasmic__default_style.module.css\"; // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_empty_project.module.css\"; // plasmic-import: 7nM6r7HjBdt6ZRgVtAxBkm/projectcss\nimport * as sty from \"./PlasmicButton.module.css\"; // plasmic-import: Fkal6KpxwF/css\nimport StarIcon from \"./icons/PlasmicIcon__Star\"; // plasmic-import: 4B9SobYc8/icon\n\nexport const PlasmicButton__VariantProps = new Array(\"withIcon\", \"noIcon\");\n\nexport const PlasmicButton__ArgProps = new Array();\n\nfunction PlasmicButton__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props;\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {\n        [sty.root__noIcon]: hasVariant(variants, \"noIcon\", \"noIcon\"),\n        [sty.root__withIcon]: hasVariant(variants, \"withIcon\", \"withIcon\"),\n        [sty.root__withIcon_noIcon]:\n          hasVariant(variants, \"withIcon\", \"withIcon\") &&\n          hasVariant(variants, \"noIcon\", \"noIcon\")\n      })}\n    >\n      {(hasVariant(variants, \"noIcon\", \"noIcon\") ? false : true) ? (\n        <StarIcon\n          data-plasmic-name={\"svg\"}\n          data-plasmic-override={overrides.svg}\n          className={classNames(defaultcss.all, sty.svg, {\n            [sty.svg__noIcon]: hasVariant(variants, \"noIcon\", \"noIcon\")\n          })}\n          role={\"img\"}\n        />\n      ) : null}\n\n      <div\n        data-plasmic-name={\"box\"}\n        data-plasmic-override={overrides.box}\n        className={classNames(defaultcss.all, defaultcss.__wab_text, sty.box, {\n          [sty.box__noIcon]: hasVariant(variants, \"noIcon\", \"noIcon\")\n        })}\n      >\n        {\"Button\"}\n      </div>\n    </p.Stack>\n  );\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"svg\", \"box\"],\n  svg: [\"svg\"],\n  box: [\"box\"]\n};\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicButton__ArgProps,\n      internalVariantPropNames: PlasmicButton__VariantProps\n    });\n\n    return PlasmicButton__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName\n    });\n  };\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicButton\";\n  } else {\n    func.displayName = `PlasmicButton.${nodeName}`;\n  }\n  return func;\n}\n\nexport const PlasmicButton = Object.assign(\n  // Top-level PlasmicButton renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    svg: makeNodeComponent(\"svg\"),\n    box: makeNodeComponent(\"box\"),\n    // Metadata about props expected for PlasmicButton\n    internalVariantProps: PlasmicButton__VariantProps,\n    internalArgProps: PlasmicButton__ArgProps\n  }\n);\n\nexport default PlasmicButton;\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\";\nimport { PlasmicButton } from \"./plasmic/empty_project/PlasmicButton\";\n\nfunction Button(props) {\n  // Use PlasmicButton to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicButton are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all ButtonProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicButton {...props} />;\n}\n\nexport default Button;\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: 7nM6r7HjBdt6ZRgVtAxBkm\n// Component: Ww9K9kI4pR\nimport * as React from \"react\";\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts\n} from \"@plasmicapp/react-web\";\nimport Button from \"../../Button\"; // plasmic-import: Fkal6KpxwF/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\";\nimport * as defaultcss from \"../plasmic__default_style.module.css\"; // plasmic-import: global/defaultcss\nimport * as projectcss from \"./plasmic_empty_project.module.css\"; // plasmic-import: 7nM6r7HjBdt6ZRgVtAxBkm/projectcss\nimport * as sty from \"./PlasmicHome.module.css\"; // plasmic-import: Ww9K9kI4pR/css\n\nexport const PlasmicHome__VariantProps = new Array();\n\nexport const PlasmicHome__ArgProps = new Array();\n\nfunction PlasmicHome__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props;\n  return (\n    <React.Fragment>\n      <div className={defaultcss.plasmic_page_wrapper}>\n        <div\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          className={classNames(\n            defaultcss.all,\n            projectcss.root_reset,\n            sty.root\n          )}\n        >\n          <Button\n            data-plasmic-name={\"button\"}\n            data-plasmic-override={overrides.button}\n            className={classNames(\"__wab_instance\", sty.button)}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"button\"],\n  button: [\"button\"]\n};\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHome__ArgProps,\n      internalVariantPropNames: PlasmicHome__VariantProps\n    });\n\n    return PlasmicHome__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName\n    });\n  };\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHome\";\n  } else {\n    func.displayName = `PlasmicHome.${nodeName}`;\n  }\n  return func;\n}\n\nexport const PlasmicHome = Object.assign(\n  // Top-level PlasmicHome renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicHome\n    internalVariantProps: PlasmicHome__VariantProps,\n    internalArgProps: PlasmicHome__ArgProps\n  }\n);\n\nexport default PlasmicHome;\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\";\nimport { PlasmicHome } from \"./plasmic/empty_project/PlasmicHome\";\n\nfunction Home(props) {\n  // Use PlasmicHome to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHome are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HomeProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHome {...props} />;\n}\n\nexport default Home;\n","\nimport Home from './components/Home.jsx';\n\nfunction App() {\n  return (<Home />);\n}\n\nexport default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlasmicButton_root__3l9ZM\",\"svg\":\"PlasmicButton_svg__34T2u\",\"box\":\"PlasmicButton_box__1ICTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"plasmic__default_style_all__3sG9G\",\"img\":\"plasmic__default_style_img__3l2Wd plasmic__default_style_all__3sG9G\",\"input\":\"plasmic__default_style_input__2xYgx plasmic__default_style_all__3sG9G\",\"textarea\":\"plasmic__default_style_textarea__e2K-X plasmic__default_style_all__3sG9G\",\"button\":\"plasmic__default_style_button__1V5zs plasmic__default_style_all__3sG9G\",\"code\":\"plasmic__default_style_code__1ReMw plasmic__default_style_all__3sG9G\",\"pre\":\"plasmic__default_style_pre__1pEPW plasmic__default_style_all__3sG9G\",\"h1\":\"plasmic__default_style_h1__2olhD plasmic__default_style_all__3sG9G\",\"h2\":\"plasmic__default_style_h2__1m5NQ plasmic__default_style_all__3sG9G\",\"h3\":\"plasmic__default_style_h3__xWs4w plasmic__default_style_all__3sG9G\",\"h4\":\"plasmic__default_style_h4__39vKd plasmic__default_style_all__3sG9G\",\"h5\":\"plasmic__default_style_h5__1sEmu plasmic__default_style_all__3sG9G\",\"h6\":\"plasmic__default_style_h6__MNLyy plasmic__default_style_all__3sG9G\",\"address\":\"plasmic__default_style_address__1Yp0H plasmic__default_style_all__3sG9G\",\"ol\":\"plasmic__default_style_ol__24TDx plasmic__default_style_all__3sG9G\",\"ul\":\"plasmic__default_style_ul__20SZ1 plasmic__default_style_all__3sG9G\",\"select\":\"plasmic__default_style_select__1XYRx plasmic__default_style_all__3sG9G\",\"li\":\"plasmic__default_style_li__1kiGb plasmic__default_style_all__3sG9G\",\"plasmic_default__component_wrapper\":\"plasmic__default_style_plasmic_default__component_wrapper__1aoLR\",\"__wab_text\":\"plasmic__default_style___wab_text__3FkrX\",\"plasmic_page_wrapper\":\"plasmic__default_style_plasmic_page_wrapper__1qPw_\"};"],"sourceRoot":""}